// Mocks generated by Mockito 5.2.0 from annotations
// in posts_app/test/data/repositories/posts_repository_impl_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:posts_app/core/network/network_info.dart' as _i7;
import 'package:posts_app/data/data_sources/local_data_source.dart' as _i5;
import 'package:posts_app/data/data_sources/remote_data_source.dart' as _i2;
import 'package:posts_app/data/models/post_model.dart' as _i4;
import 'package:posts_app/data/tables/post_table.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

/// A class which mocks [RemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoteDataSource extends _i1.Mock implements _i2.RemoteDataSource {
  MockRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.PostModel>> getPosts() =>
      (super.noSuchMethod(Invocation.method(#getPosts, []),
              returnValue: Future<List<_i4.PostModel>>.value(<_i4.PostModel>[]))
          as _i3.Future<List<_i4.PostModel>>);
  @override
  _i3.Future<void> deletePost(int? postId) =>
      (super.noSuchMethod(Invocation.method(#deletePost, [postId]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> createPost(_i4.PostModel? post) =>
      (super.noSuchMethod(Invocation.method(#createPost, [post]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> updatePost(_i4.PostModel? post) =>
      (super.noSuchMethod(Invocation.method(#updatePost, [post]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i3.Future<void>);
}

/// A class which mocks [LocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalDataSource extends _i1.Mock implements _i5.LocalDataSource {
  MockLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i6.PostTable>> getCachedPosts() =>
      (super.noSuchMethod(Invocation.method(#getCachedPosts, []),
              returnValue: Future<List<_i6.PostTable>>.value(<_i6.PostTable>[]))
          as _i3.Future<List<_i6.PostTable>>);
  @override
  _i3.Future<void> cachePosts(List<_i4.PostModel>? posts) =>
      (super.noSuchMethod(Invocation.method(#cachePosts, [posts]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i3.Future<void>);
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i7.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<bool> get isConnected =>
      (super.noSuchMethod(Invocation.getter(#isConnected),
          returnValue: Future<bool>.value(false)) as _i3.Future<bool>);
}
